name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  release:
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: release-please
    steps:
      # Step 1: Get the code
      # This checks out your repository at the specific tag/commit of the release
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Step 2: Set up Node.js environment
      # This installs Node.js and npm, similar to setting up a development machine
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'  # This caches node_modules for faster builds
          
      # Step 3: Install dependencies
      # This runs npm install to get all your project dependencies
      - name: Install dependencies
        run: npm ci  # npm ci is like npm install but faster and more reliable for CI
        
      # Step 4: Build the single file
      # This is where we create the bundled, standalone executable
      # TODO: Update file names
      - name: Build cross-platform distributions
        run: |
          # Create the base bundled JavaScript file
          npx esbuild src/index.ts \
            --bundle \
            --platform=node \
            --target=node16 \
            --outfile=dist/dnd-converter.js \
            --external:fsevents \
            --minify
          
          # Create Unix/Linux/macOS version with shebang
          echo '#!/usr/bin/env node' > dist/dnd-converter-unix
          cat dist/dnd-converter.js >> dist/dnd-converter-unix
          chmod +x dist/dnd-converter-unix
          
          # Create Windows batch file wrapper
          cat > dist/dnd-converter.bat << 'EOF'
          @echo off
          node "%~dp0dnd-converter.js" %*
          EOF
          
          # Create PowerShell wrapper for modern Windows environments
          cat > dist/dnd-converter.ps1 << 'EOF'
          $scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
          $jsFile = Join-Path $scriptDir "dnd-converter.js"
          & node $jsFile $args
          EOF
          
      # Step 5: Attach the built file to the GitHub release
      # This uploads your built file so users can download it
      # TODO: Ensure all cross platform files are uploaded
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./dist/dnd-converter-${{ github.ref_name }}.js
          asset_name: dnd-converter-${{ github.ref_name }}.js
          asset_content_type: application/javascript