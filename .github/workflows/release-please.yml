name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      pr: ${{ steps.release.outputs.pr }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  release-pr-readme-file:
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.pr }}
    needs: release-please
    steps:
      - name: Get branch
        id: branch
        run: |
          branch=$(echo '${{ needs.release-please.outputs.pr }}' | jq -r '.headBranchName')
          echo "branch_name=$branch" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v5
        with:
          ref: ${{ steps.branch.outputs.branch_name }}
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - run: npm ci
      - name: Update README
        run: |
          npm run docs
      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: Updating Documentation
          commit_options: '--no-verify'

  release:
    name: Build and Upload Release Assets
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: release-please
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - run: npm ci
      - run: npm run build
      
      # Generate cross-platform tarballs using oclif
      - name: Generate oclif tarballs
        run: npx oclif pack tarballs
        
      # Upload all generated tarballs to the release
      - name: Upload tarballs to release
        run: |
          # Find all generated tarball files
          for tarball in $(find dist -name "*.tar.gz" -o -name "*.tar.xz"); do
            filename=$(basename "$tarball")
            echo "Uploading $filename..."
            gh release upload ${{ needs.release-please.outputs.tag_name }} "$tarball" --clobber
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    needs: release-please
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - run: npm ci
      - run: npm run build
      - run: npm run prepack
      - uses: JS-DevTools/npm-publish@19c28f1ef146469e409470805ea4279d47c3d35c
        with:
          token: ${{ secrets.NPM_TOKEN }}
      - run: npm run postpack